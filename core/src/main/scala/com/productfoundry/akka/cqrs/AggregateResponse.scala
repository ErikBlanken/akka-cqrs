package com.productfoundry.akka.cqrs

/**
 * Contains additional information about the commit that is not persisted.
 * @param tag of the aggregate after update.
 * @param previous tag before the update
 * @param payload any data generated by the aggregate that might be of interest to the sender immediately.
 * @param headers any additional headers that can be populated by commit handlers.
 */
case class AggregateResponse(tag: AggregateTag,
                             previous: AggregateTag,
                             payload: Option[Any] = None,
                             headers: Map[String, String] = Map.empty) {

  /**
   * Updates the response payload, replacing the previous payload.
   *
   * @param newPayload to use.
   * @return updated response.
   */
  def withPayload(newPayload: Any): AggregateResponse = {
    copy(payload = Some(newPayload))
  }

  /**
   * Adds the specified headers to the response, overwriting existing headers.
   * @param additionalHeaders to add.
   * @return updated response.
   */
  def withHeaders(additionalHeaders: (String, String)*): AggregateResponse = {
    copy(headers = headers ++ additionalHeaders)
  }

  /**
    * @return True if the aggregate hasn't changed as a result of a command.
    */
  def unchanged: Boolean = tag.revision == previous.revision
}
